@article{lewin2018earth,
  title={Earth BioGenome Project: Sequencing life for the future of life},
  author={Lewin, Harris A and Robinson, Gene E and Kress, W John and Baker, William J and Coddington, Jonathan and Crandall, Keith A and Durbin, Richard and Edwards, Scott V and Forest, F{\'e}lix and Gilbert, M Thomas P and others},
  journal={Proceedings of the National Academy of Sciences},
  volume={115},
  number={17},
  pages={4325--4333},
  year={2018},
  publisher={National Acad Sciences}
}

@article{darwin2022sequence,
  title={Sequence locally, think globally: the Darwin Tree of Life Project},
  author={Darwin Tree of Life Project Consortium},
  journal={Proceedings of the National Academy of Sciences},
  volume={119},
  number={4},
  pages={e2115642118},
  year={2022},
  publisher={National Acad Sciences}
}

@article{mckenna2021aquatic,
  title={The Aquatic Symbiosis Genomics Project: probing the evolution of symbiosis across the tree of life},
  author={McKenna, Victoria and Archibald, John M and Beinart, Roxanne and Dawson, Michael N and Hentschel, Ute and Keeling, Patrick J and Lopez, Jose V and Mart{\'\i}n-Dur{\'a}n, Jos{\'e} M and Petersen, Jillian M and Sigwart, Julia D and others},
  journal={Wellcome Open Research},
  volume={6},
  number={254},
  pages={254},
  year={2021},
  publisher={F1000 Research Limited}
}

@article{rhie2021towards,
  title={Towards complete and error-free genome assemblies of all vertebrate species},
  author={Rhie, Arang and McCarthy, Shane A and Fedrigo, Olivier and Damas, Joana and Formenti, Giulio and Koren, Sergey and Uliano-Silva, Marcela and Chow, William and Fungtammasan, Arkarachai and Kim, Juwan and others},
  journal={Nature},
  volume={592},
  number={7856},
  pages={737--746},
  year={2021},
  publisher={Nature Publishing Group UK London}
}

@article{simao2015busco,
  title={BUSCO: assessing genome assembly and annotation completeness with single-copy orthologs},
  author={Sim{\~a}o, Felipe A and Waterhouse, Robert M and Ioannidis, Panagiotis and Kriventseva, Evgenia V and Zdobnov, Evgeny M},
  journal={Bioinformatics},
  volume={31},
  number={19},
  pages={3210--3212},
  year={2015},
  publisher={Oxford University Press}
}

@article{chow2016geval,
  title={gEVAL—a web-based browser for evaluating genome assemblies},
  author={Chow, William and Brugger, Kim and Caccamo, Mario and Sealy, Ian and Torrance, James and Howe, Kerstin},
  journal={Bioinformatics},
  volume={32},
  number={16},
  pages={2508--2510},
  year={2016},
  publisher={Oxford University Press}
}

@article{diesh2023jbrowse,
  title={JBrowse 2: a modular genome browser with views of synteny and structural variation},
  author={Diesh, Colin and Stevens, Garrett J and Xie, Peter and De Jesus Martinez, Teresa and Hershberg, Elliot A and Leung, Angel and Guo, Emma and Dider, Shihab and Zhang, Junjun and Bridge, Caroline and others},
  journal={Genome biology},
  volume={24},
  number={1},
  pages={74},
  year={2023},
  publisher={Springer}
}

@article{kerpedjiev2018higlass,
  title={HiGlass: web-based visual exploration and analysis of genome interaction maps},
  author={Kerpedjiev, Peter and Abdennur, Nezar and Lekschas, Fritz and McCallum, Chuck and Dinkla, Kasper and Strobelt, Hendrik and Luber, Jacob M and Ouellette, Scott B and Azhir, Alaleh and Kumar, Nikhil and others},
  journal={Genome biology},
  volume={19},
  pages={1--12},
  year={2018},
  publisher={Springer}
}

@article{ewels2020nf,
  title={The nf-core framework for community-curated bioinformatics pipelines},
  author={Ewels, Philip A and Peltzer, Alexander and Fillinger, Sven and Patel, Harshil and Alneberg, Johannes and Wilm, Andreas and Garcia, Maxime Ulysse and Di Tommaso, Paolo and Nahnsen, Sven},
  journal={Nature biotechnology},
  volume={38},
  number={3},
  pages={276--278},
  year={2020},
  publisher={Nature Publishing Group US New York}
}

@article{di2017nextflow,
  title={Nextflow enables reproducible computational workflows},
  author={Di Tommaso, Paolo and Chatzou, Maria and Floden, Evan W and Barja, Pablo Prieto and Palumbo, Emilio and Notredame, Cedric},
  journal={Nature biotechnology},
  volume={35},
  number={4},
  pages={316--319},
  year={2017},
  publisher={Nature Publishing Group}
}

@misc{edharry,
  author = {Ed Harry},
  title = {PretextView},
  year = {2021},
  publisher = {GitHub},
  journal = {GitHub repository},
  howpublished = {\url{https://github.com/sanger-tol/pretextview}},
}

@article{li2018minimap,
    author = {Li, Heng},
    title = "{Minimap2: pairwise alignment for nucleotide sequences}",
    journal = {Bioinformatics},
    volume = {34},
    number = {18},
    pages = {3094-3100},
    year = {2018},
    month = {05},
    abstract = "{Recent advances in sequencing technologies promise ultra-long reads of ∼100 kb in average, full-length mRNA or cDNA reads in high throughput and genomic contigs over 100 Mb in length. Existing alignment programs are unable or inefficient to process such data at scale, which presses for the development of new alignment algorithms.Minimap2 is a general-purpose alignment program to map DNA or long mRNA sequences against a large reference database. It works with accurate short reads of ≥100 bp in length, ≥1 kb genomic reads at error rate ∼15\\%, full-length noisy Direct RNA or cDNA reads and assembly contigs or closely related full chromosomes of hundreds of megabases in length. Minimap2 does split-read alignment, employs concave gap cost for long insertions and deletions and introduces new heuristics to reduce spurious alignments. It is 3–4 times as fast as mainstream short-read mappers at comparable accuracy, and is ≥30 times faster than long-read genomic or cDNA mappers at higher accuracy, surpassing most aligners specialized in one type of alignment.https://github.com/lh3/minimap2Supplementary data are available at Bioinformatics online.}",
    issn = {1367-4803},
    doi = {10.1093/bioinformatics/bty191},
    url = {https://doi.org/10.1093/bioinformatics/bty191},
    eprint = {https://academic.oup.com/bioinformatics/article-pdf/34/18/3094/48919122/bioinformatics\_34\_18\_3094.pdf},
}

@misc{li2023seqtk,
  author = {Li, Heng},
  title = {PretextView},
  year = {2023},
  publisher = {GitHub},
  journal = {GitHub repository},
  howpublished = {\url{https://github.com/lh3/seqtk}},
}

@article{Morgulis2006,
   abstract = {Motivation: Matches to repetitive sequences are usually undesirable in the output of DNA database searches. Repetitive sequences need not be matched to a query, if they can be masked in the database. RepeatMasker/Maskeraid (RM), currently the most widely used software for DNA sequence masking, is slow and requires a library of repetitive template sequences, such as a manually curated RepBase library, that may not exist for newly sequenced genomes. Results: We have developed a software tool called WindowMasker (WM) that identifies and masks highly repetitive DNA sequences in a genome, using only the sequence of the genome itself. WM is orders of magnitude faster than RM because WM uses a few linear-time scans of the genome sequence, rather than local alignment methods that compare each library sequence with each piece of the genome. We validate WM by comparing BLAST outputs from large sets of queries applied to two versions of the same genome, one masked by WM, and the other masked by RM. Even for genomes such as the human genome, where a good RepBase library is available, searching the database as masked with WM yields more matches that are apparently non-repetitive and fewer matches to repetitive sequences. We show that these results hold for transcribed regions as well. WM also performs well on genomes for which much of the sequence was in draft form at the time of the analysis. Availability: WM is included in the NCBI C11 toolkit. The source code for the entire toolkit is available at ftp://ftp.ncbi.nih.gov/toolbox/ ncbi_tools++/CURRENT/. Once the toolkit source is unpacked, the instructions for building WindowMasker application in the UNIX environment can be found in file src/app/winmasker/README.build. Contact: richa@helix.nih.gov Supplementary information: Supplementary data are available at ftp://ftp.ncbi.nlm.nih.gov/pub/agarwala/windowmasker/window masker_suppl.pdf.},
   author = {Aleksandr Morgulis and E Michael Gertz and Alejandro A Schä and Richa Agarwala},
   doi = {10.1093/bioinformatics/bti774},
   issue = {2},
   pages = {134-141},
   title = {WindowMasker: window-based masker for sequenced genomes},
   volume = {22},
   year = {2006},
}

@misc{anaconda,
  title={Anaconda Software Distribution},
  url={https://docs.anaconda.com/},
  journal={Anaconda Documentation},
  version={Vers. 2-2.4.0}, 
  publisher={Anaconda Inc.},
  year={2020}
}

@article{merkel2014docker,
  title={Docker: lightweight linux containers for consistent development and deployment},
  author={Merkel, Dirk},
  journal={Linux journal},
  volume={2014},
  number={239},
  pages={2},
  year={2014}
}

@article{singularity,
   abstract = {Here we present Singularity, software developed to bring containers and reproducibility to scientific computing. Using Singularity containers, developers can work in reproducible environments of their choosing and design, and these complete environments can easily be copied and executed on other platforms. Singularity is an open source initiative that harnesses the expertise of system and software engineers and researchers alike, and integrates seamlessly into common workflows for both of these groups. As its primary use case, Singularity brings mobility of computing to both users and HPC centers, providing a secure means to capture and distribute software and compute environments. This ability to create and deploy reproducible environments across these centers, a previously unmet need, makes Singular-ity a game changing development for computational science.},
   author = {Gregory M Kurtzer and Vanessa Sochat and Michael W Bauer},
   doi = {10.1371/journal.pone.0177459},
   isbn = {1111111111},
   title = {Singularity: Scientific containers for mobility of compute},
   url = {https://doi.org/10.1371/journal.pone.0177459},
}

@article{li2023miniprot,
   abstract = {Motivation: Protein-to-genome alignment is critical to annotating genes in non-model organisms. While there are a few tools for this purpose, all of them were developed over 10 years ago and did not incorporate the latest advances in alignment algorithms. They are inefficient and could not keep up with the rapid production of new genomes and quickly growing protein databases. Results: Here, we describe miniprot, a new aligner for mapping protein sequences to a complete genome. Miniprot integrates recent techniques such as k-mer sketch and vectorized dynamic programming. It is tens of times faster than existing tools while achieving comparable accuracy on real data. Availability and implementation: https://github.com/},
   author = {Heng Li},
   doi = {10.1093/bioinformatics/btad014},
   journal = {Bioinformatics},
   title = {Protein-to-genome alignment with miniprot},
   url = {https://doi.org/10.1093/bioinformatics/btad014},
   year = {2023},
}


@article{marcais2018,
   abstract = {The MUMmer system and the genome sequence aligner nucmer included within it are among the most widely used alignment packages in genomics. Since the last major release of MUMmer version 3 in 2004, it has been applied to many types of problems including aligning whole genome sequences, aligning reads to a reference genome, and comparing different assemblies of the same genome. Despite its broad utility, MUMmer3 has limitations that can make it difficult to use for large genomes and for the very large sequence data sets that are common today. In this paper we describe MUMmer4, a substantially improved version of MUMmer that addresses genome size constraints by changing the 32-bit suffix tree data structure at the core of MUMmer to a 48-bit suffix array, and that offers improved speed through parallel processing of input query sequences. With a theoretical limit on the input size of 141Tbp, MUMmer4 can now work with input sequences of any biologically realistic length. We show that as a result of these enhancements, the nucmer program in MUMmer4 is easily able to handle alignments of large genomes; we illustrate this with an alignment of the human and chimpanzee genomes, which allows us to compute that the two species are 98% identical across 96% of their length. With the enhancements described here, MUM-mer4 can also be used to efficiently align reads to reference genomes, although it is less sensitive and accurate than the dedicated read aligners. The nucmer aligner in MUMmer4 can now be called from scripting languages such as Perl, Python and Ruby. These improvements make MUMer4 one the most versatile genome alignment packages available.},
   author = {Guillaume Marçais and Arthur L Delcher and Adam M Phillippy and Rachel Coston and Steven L Salzberg and Aleksey Zimin},
   doi = {10.1371/journal.pcbi.1005944},
   isbn = {1111111111},
   journal = {PLOS Computational Biology},
   title = {MUMmer4: A fast and versatile genome alignment system},
   url = {https://doi.org/10.1371/journal.pcbi.1005944},
   year = {2018},
}

@article{Manni2021,
   abstract = {Methods for evaluating the quality of genomic and metagenomic data are essential to aid genome assembly procedures and to correctly interpret the results of subsequent analyses. BUSCO estimates the completeness and redundancy of processed genomic data based on universal single-copy orthologs. Here, we present new functionalities and major improvements of the BUSCO software, as well as the renewal and expansion of the underlying data sets in sync with the OrthoDB v10 release. Among the major novelties, BUSCO now enables phylogenetic placement of the input sequence to automatically select the most appropriate BUSCO data set for the assessment, allowing the analysis of metagenome-Assembled genomes of unknown origin. A newly introduced genome workflow increases the efficiency and runtimes especially on large eukaryotic genomes. BUSCO is the only tool capable of assessing both eukaryotic and prokaryotic species, and can be applied to various data types, from genome assemblies and metagenomic bins, to transcriptomes and gene sets.},
   author = {Mosè Manni and Matthew R. Berkeley and Mathieu Seppey and Felipe A. Simão and Evgeny M. Zdobnov},
   doi = {10.1093/MOLBEV/MSAB199},
   isbn = {002162155.1},
   issn = {15371719},
   issue = {10},
   journal = {Molecular Biology and Evolution},
   keywords = {completeness,eukaryotes,genome,metagenomes,microbes,prokaryotes,quality assessment,transcriptome,viruses},
   month = {9},
   pages = {4647-4654},
   pmid = {34320186},
   publisher = {Oxford Academic},
   title = {BUSCO Update: Novel and Streamlined Workflows along with Broader and Deeper Phylogenetic Coverage for Scoring of Eukaryotic, Prokaryotic, and Viral Genomes},
   volume = {38},
   url = {https://dx.doi.org/10.1093/molbev/msab199},
   year = {2021},
}

@article{Wright2024,
   author = {Charlotte J Wright and Lewis Stevens and Alexander Mackintosh and Mara Lawniczak and Mark Blaxter},
   doi = {10.1038/s41559-024-02329-4},
   journal = {Nature Ecology & Evolution |},
   pages = {777-790},
   title = {Comparative genomics reveals the dynamics of chromosome evolution in Lepidoptera},
   volume = {8},
   url = {https://doi.org/10.1038/s41559-024-02329-4},
   year = {2024},
}
