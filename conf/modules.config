/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: 'GENERATE_GENOME_FILE|TABIX_BGZIPTABIX|PAF2BED|UCSC_BEDTOBIGBED|UCSC_BEDGRAPHTOBIGWIG|GFF_TO_BED|RENAME_IDS|.*:.*:SYNTENY:MINIMAP2_ALIGN' {
        publishDir = [
            path: { "${params.outdir}/${task.process.tokenize(':')[-2].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: BEDTOOLS_SORT {
        ext.prefix  = { "${meta.id}.sorted" }
    }

    withName: GNU_SORT_A {
        ext.args    = { "-k1,1 -k2,2n" }
        ext.prefix  = { "${meta.id}.intersect" }
    }

    withName: GNU_SORT_B {
        ext.args    = { "-k1,1 -k2,2n" }
        ext.prefix  = { "${meta.id}.genome" }
    }

    withName: GNU_SORT_C {
        ext.args    = { "-k1,1 -k2,2n" }
        ext.prefix  = { "${meta.id}.bins" }
    }

    withName: BEDTOOLS_MAKEWINDOWS {
        ext.args    = { "-w 10000" }
    }

    withName: BEDTOOLS_INTERSECT {
        ext.prefix  = { "${meta.id}_INTERSECT" }
    }

    withName: BEDTOOLS_MAP {
        ext.prefix  = { "${meta.id}_MAPPED" }
        ext.args    = { "-c 4 -o sum" }
    }

    withName: SEQTK_CUTN {
        ext.args    = "-n 1"
    }

    withName: MINIPROT_ALIGN {
        ext.args    = " --gff -j1 -ut16 --gff-delim='#' "
    }

    withName: '.*:.*:.*:(GEN_ALIGNMENTS|RNA_ALIGNMENTS|CDS_ALIGNMENTS):MINIMAP2_ALIGN' {
        ext.args    = {"-ax splice ${meta.intron_size ? "-G ${meta.intron_size}" : ""}"}
        ext.prefix  = { "${meta.id}_alignment_${reference.getName().tokenize('.')[0]}" }
    }

    withName: '.*:.*:.*:(GEN_ALIGNMENTS|RNA_ALIGNMENTS|CDS_ALIGNMENTS):BEDTOOLS_BAMTOBED' {
        ext.args        = "-bed12"
    }

    withName: '.*:.*:.*:(GEN_ALIGNMENTS|RNA_ALIGNMENTS|CDS_ALIGNMENTS):UCSC_BEDTOBIGBED' {
        ext.prefix = { "${meta.id}_${meta.type}" }
    }

    withName: '.*:.*:.*:PEP_ALIGNMENTS:BEDTOOLS_SORT' {
        ext.prefix = { "${meta.id}_prot" }
    }

    withName: '.*:.*:INSILICO_DIGEST:UCSC_BEDTOBIGBED' {
        ext.args        = { "-type=bed4+1 -extraIndex=length" }
        ext.prefix      = { "${meta.id}" }
    }

    withName: '.*:.*:SELFCOMP:UCSC_BEDTOBIGBED' {
        ext.args    = { " -type=bed3+3 -extraIndex=qName,qStart,qEnd" }
        ext.prefix  = { "${meta.id}_selfcomp" }
    }

    withName: '.*:.*:SYNTENY:MINIMAP2_ALIGN' {
        ext.args    = '-t 8 -x asm10'
        ext.prefix  = { "${meta.id}_synteny_${reference.getName().tokenize('.')[0]}" }
    }

    withName : MUMMER {
        ext.args = "-n -b -c -L -l 400"
    }
}
